{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDI1i7z62Ic8DvigQabZrc-fA8-uW9s7zk\",\n  authDomain: \"crwn-db-40827.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-40827.firebaseio.com\",\n  projectId: \"crwn-db-40827\",\n  storageBucket: \"crwn-db-40827.appspot.com\",\n  messagingSenderId: \"850738473234\",\n  appId: \"1:850738473234:web:e8195fb5d1bda1dbb0abcb\",\n  measurementId: \"G-4DKZXR7J09\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/123huhspchsapfd`);\n  console.log(userRef);\n  const snapShot = await userRef.get(); //console.log(snapShot);\n  // if (!snapShot.exists) {\n  //     const { displayName, email } = userAuth;\n  //     const createdAt = new Date();       \n  //     try\n  //     {\n  //         await userRef.set({\n  //             displayName,\n  //             email,\n  //             createdAt,\n  //             ...additionalData\n  //         })\n  //     }\n  //     catch (error)\n  //     {\n  //         console.log('error creating user', error.message);\n  //     }\n  // }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/herma/source/repository/crwn-clothing-adu-dev/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","console","log","snapShot","get","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,+BAFD;AAGXC,EAAAA,WAAW,EAAE,sCAHF;AAIXC,EAAAA,SAAS,EAAE,eAJA;AAKXC,EAAAA,aAAa,EAAE,2BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,uBAAf,CAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AAEA,QAAMK,QAAQ,GAAG,MAAML,OAAO,CAACM,GAAR,EAAvB,CANyE,CAQzE;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAON,OAAP;AACH,CA7BM;AA+BPb,QAAQ,CAACoB,aAAT,CAAuBnB,MAAvB;AAEA,OAAO,MAAMoB,IAAI,GAAGrB,QAAQ,CAACqB,IAAT,EAAb;AACP,OAAO,MAAMP,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMQ,QAAQ,GAAG,IAAItB,QAAQ,CAACqB,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAetB,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDI1i7z62Ic8DvigQabZrc-fA8-uW9s7zk\",\r\n    authDomain: \"crwn-db-40827.firebaseapp.com\",\r\n    databaseURL: \"https://crwn-db-40827.firebaseio.com\",\r\n    projectId: \"crwn-db-40827\",\r\n    storageBucket: \"crwn-db-40827.appspot.com\",\r\n    messagingSenderId: \"850738473234\",\r\n    appId: \"1:850738473234:web:e8195fb5d1bda1dbb0abcb\",\r\n    measurementId: \"G-4DKZXR7J09\"\r\n  };\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {    \r\n    if (!userAuth) return;\r\n\r\n    const userRef = firestore.doc(`users/123huhspchsapfd`);\r\n    console.log(userRef);\r\n\r\n    const snapShot = await userRef.get();\r\n\r\n    //console.log(snapShot);\r\n\r\n    // if (!snapShot.exists) {\r\n    //     const { displayName, email } = userAuth;\r\n    //     const createdAt = new Date();       \r\n\r\n    //     try\r\n    //     {\r\n    //         await userRef.set({\r\n    //             displayName,\r\n    //             email,\r\n    //             createdAt,\r\n    //             ...additionalData\r\n    //         })\r\n    //     }\r\n    //     catch (error)\r\n    //     {\r\n    //         console.log('error creating user', error.message);\r\n    //     }\r\n    // }\r\n    return userRef; \r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}