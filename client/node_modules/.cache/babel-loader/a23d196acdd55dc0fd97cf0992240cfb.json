{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider); //console.log(user)\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/herma/source/repository/crwn-clothing-adu-dev/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","auth","googleProvider","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","googleSignInSuccess","id","data","error","googleSignInFailure","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA6B,cAA7B;AAEA,SACIC,aADJ,EAEIC,aAFJ,QAGO,gBAHP;AAKA,SACIC,IADJ,EAEIC,cAFJ,EAGIC,yBAHJ,QAIO,+BAJP;AAMA,OAAO,UAAWC,gBAAX,GAA8B;AACjC,MACA;AACI,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAArB,CADJ,CAEI;;AAEA,UAAMK,OAAO,GAAG,MAAMV,IAAI,CAACM,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACe,mBAAmB,CAAC;AAAEC,MAAAA,EAAE,EAAEH,YAAY,CAACG,EAAnB;AAAuB,SAAGH,YAAY,CAACI,IAAb;AAA1B,KAAD,CAApB,CAAT;AACH,GARD,CASA,OAAMC,KAAN,EAAa;AACT,UAAMlB,GAAG,CAACmB,mBAAmB,CAACD,KAAD,CAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUE,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAV,CAA1B,EAA0D;AAC7D,MACA;AACI,UAAM;AAAEb,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMX,OAAO,GAAG,MAAMV,IAAI,CAACM,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AAEA,UAAMd,GAAG,CAACI,aAAa,CAAC;AAAEY,MAAAA,EAAE,EAAEH,YAAY,CAACG,EAAnB;AAAuB,SAAGH,YAAY,CAACI,IAAb;AAA1B,KAAD,CAAd,CAAT;AACH,GAPD,CAQA,OAAOC,KAAP,EACA;AACI,UAAMlB,GAAG,CAACK,aAAa,CAACa,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUO,mBAAV,GAAgC;AACnC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,oBAAjB,EAAuCjB,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUkB,kBAAV,GAA+B;AAClC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAsCR,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUS,SAAV,GAAsB;AACzB,QAAM5B,GAAG,CAAC,CACRC,IAAI,CAACuB,mBAAD,CADI,EAERvB,IAAI,CAACyB,kBAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport UserActionTypes  from './user.types'\r\n\r\nimport {\r\n    signInSuccess, \r\n    signInFailure \r\n} from './user.actions';\r\n\r\nimport { \r\n    auth, \r\n    googleProvider, \r\n    createUserProfileDocument \r\n} from '../../firebase/firebase.utils';\r\n\r\nexport function*  signInWithGoogle() {\r\n    try\r\n    {\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        //console.log(user)\r\n\r\n        const userRef = yield call(createUserProfileDocument, user)\r\n        const userSnapshot = yield userRef.get()\r\n        yield put(googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n    }\r\n    catch(error) {\r\n        yield put(googleSignInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({payload: { email, password }}) {\r\n    try\r\n    {\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n        const userRef = yield call(createUserProfileDocument, user)\r\n        const userSnapshot = yield userRef.get()\r\n\r\n        yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\r\n    }\r\n    catch (error)\r\n    {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n      call(onGoogleSignInStart),\r\n      call(onEmailSignInStart)\r\n    ]);\r\n  }"]},"metadata":{},"sourceType":"module"}